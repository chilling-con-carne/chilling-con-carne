"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const script_1 = require("@volar/vue-code-gen/out/generators/script");
function default_1(lang, scriptRanges, scriptSetupRanges, htmlGen, compilerOptions, cssVars) {
    return {
        getEmbeddedFilesCount(fileName, sfc) {
            return fileName.endsWith('.html') ? 0 : 2;
        },
        getEmbeddedFile(fileName, sfc, i) {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            const codeGen = (0, script_1.generate)(i === 0 ? 'script' : 'template', fileName, (_a = sfc.script) !== null && _a !== void 0 ? _a : undefined, (_b = sfc.scriptSetup) !== null && _b !== void 0 ? _b : undefined, scriptRanges.value, scriptSetupRanges.value, () => htmlGen.value, () => {
                const bindTexts = [];
                for (const cssVar of cssVars.value) {
                    bindTexts.push(cssVar);
                }
                return bindTexts;
            }, ((_c = compilerOptions.experimentalImplicitWrapComponentOptionsWithDefineComponent) !== null && _c !== void 0 ? _c : 'onlyJs') === 'onlyJs'
                ? lang.value === 'js' || lang.value === 'jsx'
                : !!compilerOptions.experimentalImplicitWrapComponentOptionsWithDefineComponent, ((_d = compilerOptions.experimentalDowngradePropsAndEmitsToSetupReturnOnScriptSetup) !== null && _d !== void 0 ? _d : 'onlyJs') === 'onlyJs'
                ? lang.value === 'js' || lang.value === 'jsx'
                : !!compilerOptions.experimentalDowngradePropsAndEmitsToSetupReturnOnScriptSetup, (_e = compilerOptions.target) !== null && _e !== void 0 ? _e : 3);
            let file;
            if (i === 0) {
                file = {
                    fileName: fileName + '.' + lang.value,
                    content: codeGen.codeGen.getText(),
                    capabilities: {
                        diagnostics: !((_f = sfc.script) === null || _f === void 0 ? void 0 : _f.src),
                        foldingRanges: false,
                        formatting: false,
                        documentSymbol: false,
                        codeActions: !((_g = sfc.script) === null || _g === void 0 ? void 0 : _g.src),
                        inlayHints: !((_h = sfc.script) === null || _h === void 0 ? void 0 : _h.src),
                    },
                    isTsHostFile: true,
                    mappings: codeGen.codeGen.getMappings(),
                    teleportMappings: codeGen.teleports,
                };
            }
            else if (sfc.script || sfc.scriptSetup) {
                file = {
                    fileName: fileName + '.__VLS_script.' + lang.value,
                    content: codeGen.codeGen.getText(),
                    capabilities: {
                        diagnostics: false,
                        foldingRanges: false,
                        formatting: false,
                        documentSymbol: false,
                        codeActions: false,
                        inlayHints: false,
                    },
                    isTsHostFile: true,
                    mappings: codeGen.codeGen.getMappings(),
                    teleportMappings: codeGen.teleports,
                };
            }
            return file;
        },
    };
}
exports.default = default_1;
//# sourceMappingURL=vue-typescript-scripts.js.map